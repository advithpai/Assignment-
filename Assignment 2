Problem No: 01

Given two non-negative int values, return true if they have the same last digit, such

as with 27 and 57. Note that the % "mod" operator computes remainders, so 17 %

10 is 7.

lastDigit(7, 17) → true

lastDigit(6, 17) → false

lastDigit(3, 113) → true

code:
class Numbers {
static boolean check(int a,int b)
{
int d=a%10;
int e=b%10;
if(d==e)
return true;
else
return false;
}
public static void main(String[] args) {
int a=26;
int b=56;
System.out.print(check(a,b));
}
}


Problem No: 02

Given one integer n and return true if it is an even number else return false.

Even(6) -> True.

Even(7) -> False.

Even(9) -> False.

code:
class Number {

static boolean even(int n)

{

if(n%2==0)

return true;

else

return false;

}

public static void main(String[] args) {

int a=27;

System.out.print(even(a));

}

}


Problem no: 03

Given two int values, return their sum. Unless the two values are the same, then

return double their sum.

sumDouble(1, 2) → 3

sumDouble(3, 2) → 5

sumDouble(2, 2) → 8
3.class Number {

static int doublesum(int a,int b)

{

if(a==b)

return 2*(a+b);

else

return a+b;

}

public static void main(String[] args) {
int a=2;

int b=2;

System.out.print(doublesum(a,b));

}

}


Problem no: 04

Given 2 ints, a and b, return true if one of them is 10 or if their sum is 10.

makes10(9, 10) → true

makes10(9, 9) → false

makes10(1, 9) → true

4.class Number {

static boolean makes10(int a,int b)

{

if(a==10 || b==10 || a+b==10)

return true;

else

return false;

}

public static void main(String[] args) {

int a=9;

int b=1;

System.out.print(makes10(a,b));

}

}

Problem No: 05

Given 2 int values, return true if either of them is in the range 10..20 inclusive.

in1020(12, 99) → true

in1020(21, 12) → true

in1020(8, 99) → false

code:
5.class Number {

static boolean in1020(int a,int b)

{

if((a>=10 && a<=20) || (b>=10 && b<=20))

return true;

else

return false;

}

public static void main(String[] args) {

int a=8;

int b=99;

System.out.print(in1020(a,b));

}

}
